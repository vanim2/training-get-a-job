{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  result: 0,\n  formInput: 2\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    formInput: function (state, action) {\n      state.formInput = action.payload;\n    },\n    increment: function (state, action) {\n      state.result = state.result + 1;\n    },\n    decrement: function (state, action) {\n      if (state.result <= 0) {\n        state.result = 0;\n      } else {\n        state.result = state.result - 1;\n      }\n    },\n    addAmount: function (state, action) {\n      state.result = state.result + 1;\n    },\n    addAsync: function (state, action) {\n      state.result = state.result + 1;\n    },\n    addIfOdd: function (state, action) {\n      if (state.result % 2 !== 0) {\n        state.result = state.result + 1;\n      }\n    }\n  }\n});\nexport default counterSlice.reducer;\nexport const {\n  addAmount,\n  increment,\n  decrement,\n  addIfOdd,\n  addAsync,\n  formInput\n} = counterSlice.actions;","map":{"version":3,"names":["createSlice","initialState","result","formInput","counterSlice","name","reducers","state","action","payload","increment","decrement","addAmount","addAsync","addIfOdd","reducer","actions"],"sources":["/Users/vani/Desktop/Github_repos/training-get a job/redux-counterApp/src/redux/feature/counter.feature.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  result: 0,\n  formInput: 2,\n};\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    formInput: function (state, action) {\n      state.formInput = action.payload;\n    },\n    increment: function (state, action) {\n      state.result = state.result + 1;\n    },\n    decrement: function (state, action) {\n      if (state.result <= 0) {\n        state.result = 0;\n      } else {\n        state.result = state.result - 1;\n      }\n    },\n    addAmount: function (state, action) {\n      state.result = state.result + 1;\n    },\n    addAsync: function (state, action) {\n      state.result = state.result + 1;\n    },\n    addIfOdd: function (state, action) {\n      if (state.result % 2 !== 0) {\n        state.result = state.result + 1;\n      }\n    },\n  },\n});\n\nexport default counterSlice.reducer;\nexport const {\n  addAmount,\n  increment,\n  decrement,\n  addIfOdd,\n  addAsync,\n  formInput,\n} = counterSlice.actions;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,CAAC;EACTC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACRH,SAAS,EAAE,SAAAA,CAAUI,KAAK,EAAEC,MAAM,EAAE;MAClCD,KAAK,CAACJ,SAAS,GAAGK,MAAM,CAACC,OAAO;IAClC,CAAC;IACDC,SAAS,EAAE,SAAAA,CAAUH,KAAK,EAAEC,MAAM,EAAE;MAClCD,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,GAAG,CAAC;IACjC,CAAC;IACDS,SAAS,EAAE,SAAAA,CAAUJ,KAAK,EAAEC,MAAM,EAAE;MAClC,IAAID,KAAK,CAACL,MAAM,IAAI,CAAC,EAAE;QACrBK,KAAK,CAACL,MAAM,GAAG,CAAC;MAClB,CAAC,MAAM;QACLK,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,GAAG,CAAC;MACjC;IACF,CAAC;IACDU,SAAS,EAAE,SAAAA,CAAUL,KAAK,EAAEC,MAAM,EAAE;MAClCD,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,GAAG,CAAC;IACjC,CAAC;IACDW,QAAQ,EAAE,SAAAA,CAAUN,KAAK,EAAEC,MAAM,EAAE;MACjCD,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,GAAG,CAAC;IACjC,CAAC;IACDY,QAAQ,EAAE,SAAAA,CAAUP,KAAK,EAAEC,MAAM,EAAE;MACjC,IAAID,KAAK,CAACL,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAC1BK,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,GAAG,CAAC;MACjC;IACF;EACF;AACF,CAAC,CAAC;AAEF,eAAeE,YAAY,CAACW,OAAO;AACnC,OAAO,MAAM;EACXH,SAAS;EACTF,SAAS;EACTC,SAAS;EACTG,QAAQ;EACRD,QAAQ;EACRV;AACF,CAAC,GAAGC,YAAY,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}