{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  result: 0\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment: function (state, action) {\n      state.result = state.result + 1;\n    },\n    decrement: function (state, action) {\n      if (state.result <= 0) {\n        state.result = 0;\n      } else {\n        state.result = state.result - 1;\n      }\n    },\n    addAmount: function (state, action) {\n      state.result = state.result + state.incrementAmount;\n    },\n    addAsync: function (state, action) {\n      setTimeout(() => {\n        state.result = state.result + state.incrementAmount;\n      }, 1000);\n    },\n    addIfOdd: function (state, action) {\n      if (state.result % 2 === 0) {\n        state.result = state.result;\n      } else {\n        state.result = state.result + state.incrementAmount;\n      }\n    }\n  }\n});\nexport default counterSlice.reducer;\nexport const {\n  addAmount,\n  increment,\n  decrement,\n  addIfOdd,\n  addAsync\n} = counterSlice.actions;","map":{"version":3,"names":["createSlice","initialState","result","counterSlice","name","reducers","increment","state","action","decrement","addAmount","incrementAmount","addAsync","setTimeout","addIfOdd","reducer","actions"],"sources":["/Users/vani/Desktop/Github_repos/training-get a job/redux-counterApp/src/redux/feature/counter.feature.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  result: 0,\n};\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment: function (state, action) {\n      state.result = state.result + 1;\n    },\n    decrement: function (state, action) {\n      if (state.result <= 0) {\n        state.result = 0;\n      } else {\n        state.result = state.result - 1;\n      }\n    },\n    addAmount: function (state, action) {\n      state.result = state.result + state.incrementAmount;\n    },\n    addAsync: function (state, action) {\n      setTimeout(() => {\n        state.result = state.result + state.incrementAmount;\n      }, 1000);\n    },\n    addIfOdd: function (state, action) {\n      if (state.result % 2 === 0) {\n        state.result = state.result;\n      } else {\n        state.result = state.result + state.incrementAmount;\n      }\n    },\n  },\n});\n\nexport default counterSlice.reducer;\nexport const { addAmount, increment, decrement, addIfOdd, addAsync } =\n  counterSlice.actions;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,YAAY,GAAGH,WAAW,CAAC;EAC/BI,IAAI,EAAE,SAAS;EACfH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACRC,SAAS,EAAE,SAAAA,CAAUC,KAAK,EAAEC,MAAM,EAAE;MAClCD,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,GAAG,CAAC;IACjC,CAAC;IACDO,SAAS,EAAE,SAAAA,CAAUF,KAAK,EAAEC,MAAM,EAAE;MAClC,IAAID,KAAK,CAACL,MAAM,IAAI,CAAC,EAAE;QACrBK,KAAK,CAACL,MAAM,GAAG,CAAC;MAClB,CAAC,MAAM;QACLK,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,GAAG,CAAC;MACjC;IACF,CAAC;IACDQ,SAAS,EAAE,SAAAA,CAAUH,KAAK,EAAEC,MAAM,EAAE;MAClCD,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACI,eAAe;IACrD,CAAC;IACDC,QAAQ,EAAE,SAAAA,CAAUL,KAAK,EAAEC,MAAM,EAAE;MACjCK,UAAU,CAAC,MAAM;QACfN,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACI,eAAe;MACrD,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IACDG,QAAQ,EAAE,SAAAA,CAAUP,KAAK,EAAEC,MAAM,EAAE;MACjC,IAAID,KAAK,CAACL,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAC1BK,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM;MAC7B,CAAC,MAAM;QACLK,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACI,eAAe;MACrD;IACF;EACF;AACF,CAAC,CAAC;AAEF,eAAeR,YAAY,CAACY,OAAO;AACnC,OAAO,MAAM;EAAEL,SAAS;EAAEJ,SAAS;EAAEG,SAAS;EAAEK,QAAQ;EAAEF;AAAS,CAAC,GAClET,YAAY,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}