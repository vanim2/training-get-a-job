{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  result: '0',\n  incrementAmount: 2\n};\nconsole.log(result);\nconst counterSlice = createSlice({\n  name: 'counter',\n  intialState: initialState,\n  reducers: {\n    addAmount: function (state, action) {\n      state.result = state.result + state.incrementAmount;\n    },\n    increment: function (state, action) {\n      state.result = state.result + 1;\n    },\n    decrement: function (state, action) {\n      state.result = state.resul - 1;\n    },\n    addIfOdd: function (state, action) {\n      if (state.result % 2 === 0) {\n        return state.result;\n      } else {\n        state.result = state.result + state.incrementAmount;\n      }\n    }\n  },\n  addAsync: function (state, action) {\n    setTimeout(() => {\n      state.result = state.result + state.incrementAmount;\n    }, 1000);\n  }\n});\nexport default counterSlice.reducer;\nexport const {\n  addAmount,\n  increment,\n  decrement,\n  addIfOdd,\n  addAsync\n} = counterSlice.actions;","map":{"version":3,"names":["createSlice","initialState","result","incrementAmount","console","log","counterSlice","name","intialState","reducers","addAmount","state","action","increment","decrement","resul","addIfOdd","addAsync","setTimeout","reducer","actions"],"sources":["/Users/vani/Desktop/Github_repos/training-get a job/redux-counterApp/src/redux/feature/counter.feature.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  result: '0',\n  incrementAmount: 2,\n};\nconsole.log(result);\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  intialState: initialState,\n  reducers: {\n    addAmount: function (state, action) {\n      state.result = state.result + state.incrementAmount;\n    },\n    increment: function (state, action) {\n      state.result = state.result + 1;\n    },\n    decrement: function (state, action) {\n      state.result = state.resul - 1;\n    },\n    addIfOdd: function (state, action) {\n      if (state.result % 2 === 0) {\n        return state.result;\n      } else {\n        state.result = state.result + state.incrementAmount;\n      }\n    },\n  },\n  addAsync: function (state, action) {\n    setTimeout(() => {\n      state.result = state.result + state.incrementAmount;\n    }, 1000);\n  },\n});\n\nexport default counterSlice.reducer;\nexport const { addAmount, increment, decrement, addIfOdd, addAsync } =\n  counterSlice.actions;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,GAAG;EACXC,eAAe,EAAE;AACnB,CAAC;AACDC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;AAEnB,MAAMI,YAAY,GAAGN,WAAW,CAAC;EAC/BO,IAAI,EAAE,SAAS;EACfC,WAAW,EAAEP,YAAY;EACzBQ,QAAQ,EAAE;IACRC,SAAS,EAAE,SAAAA,CAAUC,KAAK,EAAEC,MAAM,EAAE;MAClCD,KAAK,CAACT,MAAM,GAAGS,KAAK,CAACT,MAAM,GAAGS,KAAK,CAACR,eAAe;IACrD,CAAC;IACDU,SAAS,EAAE,SAAAA,CAAUF,KAAK,EAAEC,MAAM,EAAE;MAClCD,KAAK,CAACT,MAAM,GAAGS,KAAK,CAACT,MAAM,GAAG,CAAC;IACjC,CAAC;IACDY,SAAS,EAAE,SAAAA,CAAUH,KAAK,EAAEC,MAAM,EAAE;MAClCD,KAAK,CAACT,MAAM,GAAGS,KAAK,CAACI,KAAK,GAAG,CAAC;IAChC,CAAC;IACDC,QAAQ,EAAE,SAAAA,CAAUL,KAAK,EAAEC,MAAM,EAAE;MACjC,IAAID,KAAK,CAACT,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAC1B,OAAOS,KAAK,CAACT,MAAM;MACrB,CAAC,MAAM;QACLS,KAAK,CAACT,MAAM,GAAGS,KAAK,CAACT,MAAM,GAAGS,KAAK,CAACR,eAAe;MACrD;IACF;EACF,CAAC;EACDc,QAAQ,EAAE,SAAAA,CAAUN,KAAK,EAAEC,MAAM,EAAE;IACjCM,UAAU,CAAC,MAAM;MACfP,KAAK,CAACT,MAAM,GAAGS,KAAK,CAACT,MAAM,GAAGS,KAAK,CAACR,eAAe;IACrD,CAAC,EAAE,IAAI,CAAC;EACV;AACF,CAAC,CAAC;AAEF,eAAeG,YAAY,CAACa,OAAO;AACnC,OAAO,MAAM;EAAET,SAAS;EAAEG,SAAS;EAAEC,SAAS;EAAEE,QAAQ;EAAEC;AAAS,CAAC,GAClEX,YAAY,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}