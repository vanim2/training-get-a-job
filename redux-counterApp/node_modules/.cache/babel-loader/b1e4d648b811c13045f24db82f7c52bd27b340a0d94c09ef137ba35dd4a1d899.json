{"ast":null,"code":"var _jsxFileName = \"/Users/vani/Desktop/Github_repos/redux/react-redux/src/components/Employees.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport EmployeeServices from '../services/EmployeeServices';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checked } from '../redux/feature/employee.feature';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Employees = () => {\n  _s();\n  // const [employees, setemployees] = useState(() => {\n  //   return EmployeeServices.getAllEmployeeList();\n  // });\n  // const checked = (id) => {\n  //   const selectedEmployee = employees.map((employee) => {\n  //     if (employee.id === id) {\n  //       return {\n  //         ...employee,\n  //         isSelected: !employee.isSelected,\n  //       };\n  //     } else return employee;\n  //   });\n  //   setemployees(selectedEmployee);\n  // };\n\n  //fetch data from store\n  const employees = useSelector(state => {\n    return state.employee.employees;\n  });\n  // console.log(employees);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"kjfrgwkj wrjwlrlwrlkrw wfjlwlwrjw kfnsalkdflksjf kjflsjflskdfjlksdj sjflskjflksdflasdkf skdfjlskjflksfjl sdkflskdfjlsdkflskdflksdfjl sldkf sldkflsdkjflsdf sdlfjlsjfldfjl lsfjlsdfjlskfjl\", ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: employees.length > 0 && employees.map((employee, index) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: () => {\n                    checked(employee.id);\n                  },\n                  type: \"checkbox\",\n                  className: \"form-check-input me-3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 23\n                }, this), employee.name]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: employees.length > 0 && employees.map(employee => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: employee.isSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"list-group-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"list-group-item\",\n                      children: employee.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"list-group-item\",\n                      children: employee.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"list-group-item\",\n                      children: employee.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 23\n              }, this)\n            }, employee.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Employees, \"QVrFwkF4pmSR1TGWxlnBmoCCdso=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Employees;\nexport default Employees;\nvar _c;\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"names":["React","EmployeeServices","useSelector","useDispatch","checked","jsxDEV","_jsxDEV","Employees","_s","employees","state","employee","dispatch","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","index","onChange","id","type","name","isSelected","username","email","_c","$RefreshReg$"],"sources":["/Users/vani/Desktop/Github_repos/redux/react-redux/src/components/Employees.jsx"],"sourcesContent":["import React from 'react';\nimport EmployeeServices from '../services/EmployeeServices';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checked } from '../redux/feature/employee.feature';\nconst Employees = () => {\n  // const [employees, setemployees] = useState(() => {\n  //   return EmployeeServices.getAllEmployeeList();\n  // });\n  // const checked = (id) => {\n  //   const selectedEmployee = employees.map((employee) => {\n  //     if (employee.id === id) {\n  //       return {\n  //         ...employee,\n  //         isSelected: !employee.isSelected,\n  //       };\n  //     } else return employee;\n  //   });\n  //   setemployees(selectedEmployee);\n  // };\n\n  //fetch data from store\n  const employees = useSelector((state) => {\n    return state.employee.employees;\n  });\n  // console.log(employees);\n  const dispatch = useDispatch();\n\n  return (\n    <React.Fragment>\n      {/* <pre>{JSON.stringify(employees)}</pre> */}\n      <h1>Employees</h1>\n      <p>\n        kjfrgwkj wrjwlrlwrlkrw wfjlwlwrjw kfnsalkdflksjf kjflsjflskdfjlksdj\n        sjflskjflksdflasdkf skdfjlskjflksfjl sdkflskdfjlsdkflskdflksdfjl sldkf\n        sldkflsdkjflsdf sdlfjlsjfldfjl lsfjlsdfjlskfjl{' '}\n      </p>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ul className=\"list-group\">\n              {employees.length > 0 &&\n                employees.map((employee, index) => {\n                  return (\n                    <li className=\"list-group-item\" key={index}>\n                      <input\n                        onChange={() => {\n                          checked(employee.id);\n                        }}\n                        type=\"checkbox\"\n                        className=\"form-check-input me-3\"\n                      />\n                      {employee.name}\n                    </li>\n                  );\n                })}\n            </ul>\n          </div>\n          <div className=\"col-md-4\">\n            {employees.length > 0 &&\n              employees.map((employee) => {\n                return (\n                  <div key={employee.id}>\n                    {employee.isSelected && (\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <ul className=\"list-group-item\">\n                            <li className=\"list-group-item\">{employee.name}</li>\n                            <li className=\"list-group-item\">\n                              {employee.username}\n                            </li>\n                            <li className=\"list-group-item\">\n                              {employee.email}\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Employees;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}