{"ast":null,"code":"var _jsxFileName = \"/Users/vani/Desktop/Github_repos/training-get a job/redux-counterApp/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './Counter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment, decrement, addAmount, addIfOdd, addAsync } from '../redux/feature/counter.feature';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Counter() {\n  _s();\n  const [incrementAmount, setIncrementAmount] = useState(0);\n  //get data from redux store\n\n  const count = useSelector(state => {\n    return state.counter;\n  });\n  console.log(count);\n  const dispatch = useDispatch();\n\n  //addincrement function\n  const counterIncrement = () => {\n    dispatch(increment());\n  };\n  //decrement function\n  const counterDecrement = () => {\n    dispatch(decrement());\n  };\n  const counterAddAmount = incrementAmount => {\n    dispatch(addAmount());\n  };\n\n  //addIfOdd function\n  const counterAddIfOdd = incrementAmount => {\n    dispatch(addIfOdd());\n  };\n  //addAsync function\n  const counterAddAsync = incrementAmount => {\n    dispatch(addAsync());\n  };\n\n  //   const [result, setresult] = useState(0);\n  //   //addAmount function\n  //   const addAmount = () => {\n  //     setresult(result + incrementAmount);\n  //   };\n  //   //addincrement function\n  //   const increment = () => {\n  //     setresult(result + 1);\n  //   };\n  //   //decrement function\n  //   const decrement = () => {\n  //     if (result <= 0) {\n  //       setresult(0);\n  //     } else {\n  //       setresult(result - 1);\n  //     }\n  //   };\n  //   //addIfOdd function\n  //   const addIfOdd = () => {\n  //     if (result % 2 === 0) {\n  //       setresult(result);\n  //     } else {\n  //       setresult(result + incrementAmount);\n  //     }\n  //   };\n  //   //addAsync function\n  //   const addAsync = () => {\n  //     setTimeout(() => {\n  //       setresult(result + incrementAmount);\n  //     }, 1000);\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: counterDecrement,\n        className: styles.button,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.value,\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: counterIncrement,\n        className: styles.button,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.textbox,\n        type: \"number\",\n        value: incrementAmount,\n        onChange: e => setIncrementAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: counterAddAmount(incrementAmount),\n        className: styles.button,\n        children: \"Add Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: counterAddAsync(incrementAmount),\n        className: styles.asyncButton,\n        children: \"Add Async\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: counterAddIfOdd(incrementAmount),\n        className: styles.button,\n        children: \"Add If Odd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"Oco70X2MaLAYuLE+8UnWGxh38+M=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","styles","useSelector","useDispatch","increment","decrement","addAmount","addIfOdd","addAsync","jsxDEV","_jsxDEV","Counter","_s","incrementAmount","setIncrementAmount","count","state","counter","console","log","dispatch","counterIncrement","counterDecrement","counterAddAmount","counterAddIfOdd","counterAddAsync","children","className","row","onClick","button","fileName","_jsxFileName","lineNumber","columnNumber","value","textbox","type","onChange","e","target","asyncButton","_c","$RefreshReg$"],"sources":["/Users/vani/Desktop/Github_repos/training-get a job/redux-counterApp/src/components/Counter.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './Counter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  increment,\n  decrement,\n  addAmount,\n  addIfOdd,\n  addAsync,\n} from '../redux/feature/counter.feature';\n\nexport function Counter() {\n  const [incrementAmount, setIncrementAmount] = useState(0);\n  //get data from redux store\n\n  const count = useSelector((state) => {\n    return state.counter;\n  });\n  console.log(count);\n  const dispatch = useDispatch();\n\n  //addincrement function\n  const counterIncrement = () => {\n    dispatch(increment());\n  };\n  //decrement function\n  const counterDecrement = () => {\n    dispatch(decrement());\n  };\n\n  const counterAddAmount = (incrementAmount) => {\n    dispatch(addAmount());\n  };\n\n  //addIfOdd function\n  const counterAddIfOdd = (incrementAmount) => {\n    dispatch(addIfOdd());\n  };\n  //addAsync function\n  const counterAddAsync = (incrementAmount) => {\n    dispatch(addAsync());\n  };\n\n  //   const [result, setresult] = useState(0);\n  //   //addAmount function\n  //   const addAmount = () => {\n  //     setresult(result + incrementAmount);\n  //   };\n  //   //addincrement function\n  //   const increment = () => {\n  //     setresult(result + 1);\n  //   };\n  //   //decrement function\n  //   const decrement = () => {\n  //     if (result <= 0) {\n  //       setresult(0);\n  //     } else {\n  //       setresult(result - 1);\n  //     }\n  //   };\n  //   //addIfOdd function\n  //   const addIfOdd = () => {\n  //     if (result % 2 === 0) {\n  //       setresult(result);\n  //     } else {\n  //       setresult(result + incrementAmount);\n  //     }\n  //   };\n  //   //addAsync function\n  //   const addAsync = () => {\n  //     setTimeout(() => {\n  //       setresult(result + incrementAmount);\n  //     }, 1000);\n  //   };\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button onClick={counterDecrement} className={styles.button}>\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button onClick={counterIncrement} className={styles.button}>\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          type=\"number\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          onClick={counterAddAmount(incrementAmount)}\n          className={styles.button}\n        >\n          Add Amount\n        </button>\n        <button\n          onClick={counterAddAsync(incrementAmount)}\n          className={styles.asyncButton}\n        >\n          Add Async\n        </button>\n        <button\n          onClick={counterAddIfOdd(incrementAmount)}\n          className={styles.button}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}