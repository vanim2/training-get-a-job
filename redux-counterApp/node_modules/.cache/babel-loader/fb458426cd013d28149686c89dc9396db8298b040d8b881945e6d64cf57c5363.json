{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  result: 0,\n  value: 2\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    formInput: function (state, action) {\n      state.value = action.payload;\n    },\n    increment: function (state, action) {\n      state.result = state.result + 1;\n    },\n    decrement: function (state, action) {\n      if (state.result <= 0) {\n        state.result = 0;\n      } else {\n        state.result = state.result - 1;\n      }\n    },\n    addAmount: function (state, action) {\n      state.result = state.result + state.value;\n    },\n    addAsync: function (state, action) {\n      setTimeout(() => {\n        state.result = state.result + state.value;\n      }, 1000);\n    },\n    addIfOdd: function (state, action) {\n      if (state.result % 2 !== 0) {\n        state.result = state.result + state.value;\n      }\n    }\n  }\n});\nexport default counterSlice.reducer;\nexport const {\n  addAmount,\n  increment,\n  decrement,\n  addIfOdd,\n  addAsync,\n  formInput\n} = counterSlice.actions;","map":{"version":3,"names":["createSlice","initialState","result","value","counterSlice","name","reducers","formInput","state","action","payload","increment","decrement","addAmount","addAsync","setTimeout","addIfOdd","reducer","actions"],"sources":["/Users/vani/Desktop/Github_repos/training-get a job/redux-counterApp/src/redux/feature/counter.feature.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  result: 0,\n  value: 2,\n};\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    formInput: function (state, action) {\n      state.value = action.payload;\n    },\n    increment: function (state, action) {\n      state.result = state.result + 1;\n    },\n    decrement: function (state, action) {\n      if (state.result <= 0) {\n        state.result = 0;\n      } else {\n        state.result = state.result - 1;\n      }\n    },\n    addAmount: function (state, action) {\n      state.result = state.result + state.value;\n    },\n    addAsync: function (state, action) {\n      setTimeout(() => {\n        state.result = state.result + state.value;\n      }, 1000);\n    },\n    addIfOdd: function (state, action) {\n      if (state.result % 2 !== 0) {\n        state.result = state.result + state.value;\n      }\n    },\n  },\n});\n\nexport default counterSlice.reducer;\nexport const {\n  addAmount,\n  increment,\n  decrement,\n  addIfOdd,\n  addAsync,\n  formInput,\n} = counterSlice.actions;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACRC,SAAS,EAAE,SAAAA,CAAUC,KAAK,EAAEC,MAAM,EAAE;MAClCD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDC,SAAS,EAAE,SAAAA,CAAUH,KAAK,EAAEC,MAAM,EAAE;MAClCD,KAAK,CAACN,MAAM,GAAGM,KAAK,CAACN,MAAM,GAAG,CAAC;IACjC,CAAC;IACDU,SAAS,EAAE,SAAAA,CAAUJ,KAAK,EAAEC,MAAM,EAAE;MAClC,IAAID,KAAK,CAACN,MAAM,IAAI,CAAC,EAAE;QACrBM,KAAK,CAACN,MAAM,GAAG,CAAC;MAClB,CAAC,MAAM;QACLM,KAAK,CAACN,MAAM,GAAGM,KAAK,CAACN,MAAM,GAAG,CAAC;MACjC;IACF,CAAC;IACDW,SAAS,EAAE,SAAAA,CAAUL,KAAK,EAAEC,MAAM,EAAE;MAClCD,KAAK,CAACN,MAAM,GAAGM,KAAK,CAACN,MAAM,GAAGM,KAAK,CAACL,KAAK;IAC3C,CAAC;IACDW,QAAQ,EAAE,SAAAA,CAAUN,KAAK,EAAEC,MAAM,EAAE;MACjCM,UAAU,CAAC,MAAM;QACfP,KAAK,CAACN,MAAM,GAAGM,KAAK,CAACN,MAAM,GAAGM,KAAK,CAACL,KAAK;MAC3C,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IACDa,QAAQ,EAAE,SAAAA,CAAUR,KAAK,EAAEC,MAAM,EAAE;MACjC,IAAID,KAAK,CAACN,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAC1BM,KAAK,CAACN,MAAM,GAAGM,KAAK,CAACN,MAAM,GAAGM,KAAK,CAACL,KAAK;MAC3C;IACF;EACF;AACF,CAAC,CAAC;AAEF,eAAeC,YAAY,CAACa,OAAO;AACnC,OAAO,MAAM;EACXJ,SAAS;EACTF,SAAS;EACTC,SAAS;EACTI,QAAQ;EACRF,QAAQ;EACRP;AACF,CAAC,GAAGH,YAAY,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}